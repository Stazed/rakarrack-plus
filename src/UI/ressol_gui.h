// generated by Fast Light User Interface Designer (fluid) version 1.0309

#ifndef ressol_gui_h
#define ressol_gui_h
#include <FL/Fl.H>
#include "RKR_Light_Button.h"
#include "RKR_Check_Button.h"
#include "RKR_Choice.h"
#include "RKR_Counter.h"
#include "RKR_GUI_Effect.h"
#include "RKR_Slider.h"
#include "../process.h"
#include "rakarrack.h"
#include "common_gui_menu.h"

class RessolGui : public RKR_Gui_Effect {
public:
  RessolGui(int X, int Y, int W, int H, const char *L = 0);
  RKR_Light_Button *ressol_activar;
private:
  inline void cb_ressol_activar_i(RKR_Light_Button*, void*);
  static void cb_ressol_activar(RKR_Light_Button*, void*);
public:
  RKR_Choice *ressol_preset;
private:
  inline void cb_ressol_preset_i(RKR_Choice*, void*);
  static void cb_ressol_preset(RKR_Choice*, void*);
  static Fl_Menu_Item menu_ressol_preset[];
public:
  RKR_Slider *ressol_WD;
private:
  inline void cb_ressol_WD_i(RKR_Slider*, void*);
  static void cb_ressol_WD(RKR_Slider*, void*);
public:
  RKR_Slider *ressol_distort;
private:
  inline void cb_ressol_distort_i(RKR_Slider*, void*);
  static void cb_ressol_distort(RKR_Slider*, void*);
public:
  RKR_Slider *ressol_freq;
private:
  inline void cb_ressol_freq_i(RKR_Slider*, void*);
  static void cb_ressol_freq(RKR_Slider*, void*);
public:
  RKR_Slider *ressol_width;
private:
  inline void cb_ressol_width_i(RKR_Slider*, void*);
  static void cb_ressol_width(RKR_Slider*, void*);
public:
  RKR_Slider *ressol_depth;
private:
  inline void cb_ressol_depth_i(RKR_Slider*, void*);
  static void cb_ressol_depth(RKR_Slider*, void*);
public:
  RKR_Slider *ressol_fb;
private:
  inline void cb_ressol_fb_i(RKR_Slider*, void*);
  static void cb_ressol_fb(RKR_Slider*, void*);
public:
  RKR_Slider *ressol_mismatch;
private:
  inline void cb_ressol_mismatch_i(RKR_Slider*, void*);
  static void cb_ressol_mismatch(RKR_Slider*, void*);
public:
  RKR_Slider *ressol_stdf;
private:
  inline void cb_ressol_stdf_i(RKR_Slider*, void*);
  static void cb_ressol_stdf(RKR_Slider*, void*);
public:
  RKR_Counter *ressol_stages;
private:
  inline void cb_ressol_stages_i(RKR_Counter*, void*);
  static void cb_ressol_stages(RKR_Counter*, void*);
public:
  RKR_Check_Button *ressol_subs;
private:
  inline void cb_ressol_subs_i(RKR_Check_Button*, void*);
  static void cb_ressol_subs(RKR_Check_Button*, void*);
public:
  RKR_Check_Button *ressol_hyper;
private:
  inline void cb_ressol_hyper_i(RKR_Check_Button*, void*);
  static void cb_ressol_hyper(RKR_Check_Button*, void*);
  CommonGuiMenu *m_lfo_menu; 
public:
  void parameter_refresh(int index);
};
#endif
